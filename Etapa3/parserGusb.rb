#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.15
# from Racc grammer file "".
#

require 'racc/parser.rb'


# Clases requeridas
require_relative 'lexer'
require_relative 'clasesGusb'
require_relative 'clasesContexto'

# Errores sintacticos
class ErrorSintactico < RuntimeError

	def initialize(token)
		@token = token
	end

	def to_s
		"ERROR: fila: " + @token.fila.to_s() + ", columna: " + @token.columna.to_s() + ", token inesperado: #{@token.token} \n"  
	end
end

# Main del Parser
class ParserGusb < Racc::Parser

module_eval(<<'...end parserGusb2.y/module_eval...', 'parserGusb2.y', 243)
	
	def initialize(tokens)
		@tokens = tokens
		@yydebug = true
		super()
	end 

	def parse
		do_parse
	end

	def next_token
		@tokens.shift
	end

	def on_error(id, token, pila)
		raise ErrorSintactico.new(token)
	end
...end parserGusb2.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     9,    93,    71,    14,    16,    70,    60,    21,    69,    19,
    20,    18,     9,    68,     2,    14,    16,    17,    29,    21,
    29,    19,    20,    18,     9,    29,   129,    14,    16,    17,
     5,    21,    60,    19,    20,    18,    55,    44,     9,    67,
   140,    17,   140,    67,   100,   101,   102,   140,     9,     6,
    93,    30,    61,    45,    46,    92,    66,    91,    44,    39,
   157,     6,    29,     9,    40,    23,   149,    55,    44,     9,
    41,   150,    29,     6,    55,    44,     9,    75,    74,    76,
    34,    35,    37,    36,    45,    46,    75,    74,    76,     9,
    39,    45,    46,    94,    89,    40,    44,    39,   100,   101,
   102,    41,    40,   100,   101,   102,    44,     9,    41,   131,
   130,    34,    35,    37,    36,    44,     9,   159,    34,    35,
    37,    36,    45,    46,   100,   101,   102,   160,    39,    22,
     9,    45,    46,    40,     3,     9,   165,    39,   166,    41,
    44,     9,    40,   nil,   nil,   nil,   nil,   nil,    41,    34,
    35,    37,    36,   nil,    44,     9,    45,    46,    34,    35,
    37,    36,    39,   nil,   nil,   nil,   nil,    40,   nil,   nil,
    45,    46,   nil,    41,    44,     9,    39,   nil,   nil,   nil,
   nil,    40,   nil,    34,    35,    37,    36,    41,    44,     9,
    45,    46,   nil,   nil,   nil,   nil,    39,    34,    35,    37,
    36,    40,   nil,   nil,    45,    46,   nil,    41,   nil,   nil,
    39,    72,    79,   nil,   nil,    40,   nil,    34,    35,    37,
    36,    41,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    34,    35,    37,    36,   nil,    73,    75,    74,    76,
    78,    77,   nil,    81,    82,    83,    84,    80,    44,     9,
   nil,   nil,    44,     9,   nil,   nil,   nil,   142,   nil,   nil,
   nil,   nil,   nil,   nil,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,    44,     9,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,    44,     9,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,    44,     9,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,    44,     9,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,    44,     9,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,   nil,   nil,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,   nil,   nil,
    39,    72,    79,     9,   nil,    40,    14,    16,   nil,   nil,
    21,    41,    19,    20,    18,   nil,    72,    79,   nil,   nil,
    17,    34,    35,    37,    36,   nil,    73,    75,    74,    76,
    78,    77,   nil,    81,    82,    83,    84,    80,    72,    79,
   134,    73,    75,    74,    76,    78,    77,   nil,    81,    82,
    83,    84,    80,   nil,   164,    72,    79,   nil,   nil,   nil,
   nil,   nil,   nil,    73,    75,    74,    76,    78,    77,   nil,
    81,    82,    83,    84,    80,   nil,   133,    72,    79,   152,
    73,    75,    74,    76,    78,    77,   nil,    81,    82,    83,
    84,    80,    72,    79,   nil,   nil,   nil,   nil,   151,   nil,
   nil,   nil,    73,    75,    74,    76,    78,    77,   nil,    81,
    82,    83,    84,    80,    72,   -77,   nil,    73,    75,    74,
    76,    78,    77,   nil,    81,    82,    83,    84,    80,    72,
   -77,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    73,
    75,    74,    76,    72,    79,   nil,    81,    82,    83,    84,
   -77,   nil,   nil,   nil,    73,    75,    74,    76,   nil,   nil,
   nil,    81,    82,    83,    84,   -77,    72,    79,    73,    75,
    74,    76,    78,    77,   nil,    81,    82,    83,    84,    80,
    72,    79,   nil,   nil,   nil,   103,   nil,   nil,   nil,   nil,
   nil,    73,    75,    74,    76,    78,    77,   nil,    81,    82,
    83,    84,    80,    72,    79,    73,    75,    74,    76,   nil,
   nil,   nil,    81,    82,    83,    84,    80,   nil,   nil,    72,
    79,   nil,   nil,   nil,   nil,   nil,   nil,    90,    73,    75,
    74,    76,    78,    77,   nil,    81,    82,    83,    84,    80,
   138,    72,    79,   nil,    73,    75,    74,    76,    78,    77,
   nil,    81,    82,    83,    84,    80,   nil,    72,    79,   nil,
   nil,   nil,   nil,   nil,   nil,    85,    73,    75,    74,    76,
    78,    77,   nil,    81,    82,    83,    84,    80,   137,    72,
    79,   nil,    73,    75,    74,    76,    78,    77,   nil,    81,
    82,    83,    84,    80,   nil,    72,    79,   nil,   nil,   nil,
   136,   nil,   nil,   nil,    73,    75,    74,    76,    78,    77,
   nil,    81,    82,    83,    84,    80,   135,    72,    79,   nil,
    73,    75,    74,    76,    78,    77,   nil,    81,    82,    83,
    84,    80,    72,    79,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   153,    73,    75,    74,    76,    78,    77,   nil,    81,
    82,    83,    84,    80,    72,    79,   nil,    73,    75,    74,
    76,   nil,    77,   nil,    81,    82,    83,    84,    80,    72,
   nil,   nil,   nil,   nil,   nil,   124,   nil,   nil,   nil,    73,
    75,    74,    76,    78,    77,    72,    81,    82,    83,    84,
    80,   nil,   nil,   nil,    73,    75,    74,    76,    72,   nil,
   nil,   -77,   -77,   -77,   -77,   nil,   nil,   nil,   nil,    72,
    73,    75,    74,    76,   nil,   nil,   nil,   -77,   -77,   -77,
   -77,   nil,   nil,    73,    75,    74,    76,   nil,   nil,   nil,
   -77,   -77,   -77,   -77,    73,    75,    74,    76,   nil,   nil,
   nil,   -77,   -77,   -77,   -77,     9,   nil,   nil,    14,    16,
   nil,   nil,    21,   nil,    19,    20,    18,     9,   nil,   nil,
    14,    16,    17,   nil,    21,   nil,    19,    20,    18,    59,
   nil,   nil,     9,   nil,    17,    14,    16,   nil,   nil,    21,
   nil,    19,    20,    18,     9,   nil,   nil,    14,    16,    17,
   nil,    21,   nil,    19,    20,    18,   nil,   nil,   nil,   nil,
   nil,    17 ]

racc_action_check = [
   159,    56,    37,   159,   159,    36,    96,   159,    35,   159,
   159,   159,     2,    34,     0,     2,     2,   159,   158,     2,
   123,     2,     2,     2,    17,   125,    96,    17,    17,     2,
     2,    17,    28,    17,    17,    17,    19,    19,    19,    32,
   158,    17,   123,   151,   149,   149,   149,   125,    18,   159,
    53,     8,    28,    19,    19,    50,    32,    49,   131,    19,
   151,     2,     7,     6,    19,     4,   143,    93,    93,    93,
    19,   145,    58,    17,    20,    20,    20,   110,   110,   110,
    19,    19,    19,    19,    93,    93,   111,   111,   111,    59,
    93,    20,    20,    57,    47,    93,   150,    20,   130,   130,
   130,    93,    20,   129,   129,   129,   140,   140,    20,   102,
    97,    93,    93,    93,    93,    14,    14,   153,    20,    20,
    20,    20,   140,   140,    61,    61,    61,   155,   140,     3,
    21,    14,    14,   140,     1,    60,   163,    14,   165,   140,
    16,    16,    14,   nil,   nil,   nil,   nil,   nil,    14,   140,
   140,   140,   140,   nil,   142,   142,    16,    16,    14,    14,
    14,    14,    16,   nil,   nil,   nil,   nil,    16,   nil,   nil,
   142,   142,   nil,    16,   103,   103,   142,   nil,   nil,   nil,
   nil,   142,   nil,    16,    16,    16,    16,   142,   157,   157,
   103,   103,   nil,   nil,   nil,   nil,   103,   142,   142,   142,
   142,   103,   nil,   nil,   157,   157,   nil,   103,   nil,   nil,
   157,   128,   128,   nil,   nil,   157,   nil,   103,   103,   103,
   103,   157,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   157,   157,   157,   157,   nil,   128,   128,   128,   128,
   128,   128,   nil,   128,   128,   128,   128,   128,   134,   134,
   nil,   nil,    94,    94,   nil,   nil,   nil,   128,   nil,   nil,
   nil,   nil,   nil,   nil,   134,   134,   nil,   nil,    94,    94,
   134,   nil,   nil,   nil,    94,   134,   nil,   nil,   nil,    94,
   nil,   134,   nil,    81,    81,    94,   nil,    84,    84,   nil,
   nil,   134,   134,   134,   134,    94,    94,    94,    94,    81,
    81,   nil,   nil,    84,    84,    81,   nil,   nil,   nil,    84,
    81,   nil,   nil,   nil,    84,   nil,    81,   nil,    83,    83,
    84,   nil,    30,    30,   nil,   nil,    81,    81,    81,    81,
    84,    84,    84,    84,    83,    83,   nil,   nil,    30,    30,
    83,   nil,   nil,   nil,    30,    83,   nil,   nil,   nil,    30,
   nil,    83,   nil,    82,    82,    30,   nil,    80,    80,   nil,
   nil,    83,    83,    83,    83,    30,    30,    30,    30,    82,
    82,   nil,   nil,    80,    80,    82,   nil,   nil,   nil,    80,
    82,   nil,   nil,   nil,    80,   nil,    82,   nil,    79,    79,
    80,   nil,    78,    78,   nil,   nil,    82,    82,    82,    82,
    80,    80,    80,    80,    79,    79,   nil,   nil,    78,    78,
    79,   nil,   nil,   nil,    78,    79,   nil,   nil,   nil,    78,
   nil,    79,   nil,    77,    77,    78,   nil,    76,    76,   nil,
   nil,    79,    79,    79,    79,    78,    78,    78,    78,    77,
    77,   nil,   nil,    76,    76,    77,   nil,   nil,   nil,    76,
    77,   nil,   nil,   nil,    76,   nil,    77,   nil,    39,    39,
    76,   nil,    40,    40,   nil,   nil,    77,    77,    77,    77,
    76,    76,    76,    76,    39,    39,   nil,   nil,    40,    40,
    39,   nil,   nil,   nil,    40,    39,   nil,   nil,   nil,    40,
   nil,    39,   nil,    41,    41,    40,   nil,    75,    75,   nil,
   nil,    39,    39,    39,    39,    40,    40,    40,    40,    41,
    41,   nil,   nil,    75,    75,    41,   nil,   nil,   nil,    75,
    41,   nil,   nil,   nil,    75,   nil,    41,   nil,    74,    74,
    75,   nil,    73,    73,   nil,   nil,    41,    41,    41,    41,
    75,    75,    75,    75,    74,    74,   nil,   nil,    73,    73,
    74,   nil,   nil,   nil,    73,    74,   nil,   nil,   nil,    73,
   nil,    74,   nil,    72,    72,    73,   nil,    71,    71,   nil,
   nil,    74,    74,    74,    74,    73,    73,    73,    73,    72,
    72,   nil,   nil,    71,    71,    72,   nil,   nil,   nil,    71,
    72,   nil,   nil,   nil,    71,   nil,    72,   nil,    70,    70,
    71,   nil,    69,    69,   nil,   nil,    72,    72,    72,    72,
    71,    71,    71,    71,    70,    70,   nil,   nil,    69,    69,
    70,   nil,   nil,   nil,    69,    70,   nil,   nil,   nil,    69,
   nil,    70,   nil,    68,    68,    69,   nil,    67,    67,   nil,
   nil,    70,    70,    70,    70,    69,    69,    69,    69,    68,
    68,   nil,   nil,    67,    67,    68,   nil,   nil,   nil,    67,
    68,   nil,   nil,   nil,    67,   nil,    68,   nil,    66,    66,
    67,   nil,   nil,   nil,   nil,   nil,    68,    68,    68,    68,
    67,    67,    67,    67,    66,    66,   nil,   nil,   nil,   nil,
    66,   105,   105,    29,   nil,    66,    29,    29,   nil,   nil,
    29,    66,    29,    29,    29,   nil,   161,   161,   nil,   nil,
    29,    66,    66,    66,    66,   nil,   105,   105,   105,   105,
   105,   105,   nil,   105,   105,   105,   105,   105,   104,   104,
   105,   161,   161,   161,   161,   161,   161,   nil,   161,   161,
   161,   161,   161,   nil,   161,   147,   147,   nil,   nil,   nil,
   nil,   nil,   nil,   104,   104,   104,   104,   104,   104,   nil,
   104,   104,   104,   104,   104,   nil,   104,   146,   146,   147,
   147,   147,   147,   147,   147,   147,   nil,   147,   147,   147,
   147,   147,   126,   126,   nil,   nil,   nil,   nil,   146,   nil,
   nil,   nil,   146,   146,   146,   146,   146,   146,   nil,   146,
   146,   146,   146,   146,   118,   118,   nil,   126,   126,   126,
   126,   126,   126,   nil,   126,   126,   126,   126,   126,   117,
   117,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   118,
   118,   118,   118,    52,    52,   nil,   118,   118,   118,   118,
   118,   nil,   nil,   nil,   117,   117,   117,   117,   nil,   nil,
   nil,   117,   117,   117,   117,   117,    64,    64,    52,    52,
    52,    52,    52,    52,   nil,    52,    52,    52,    52,    52,
   115,   115,   nil,   nil,   nil,    64,   nil,   nil,   nil,   nil,
   nil,    64,    64,    64,    64,    64,    64,   nil,    64,    64,
    64,    64,    64,    48,    48,   115,   115,   115,   115,   nil,
   nil,   nil,   115,   115,   115,   115,   115,   nil,   nil,   109,
   109,   nil,   nil,   nil,   nil,   nil,   nil,    48,    48,    48,
    48,    48,    48,    48,   nil,    48,    48,    48,    48,    48,
   109,    38,    38,   nil,   109,   109,   109,   109,   109,   109,
   nil,   109,   109,   109,   109,   109,   nil,   108,   108,   nil,
   nil,   nil,   nil,   nil,   nil,    38,    38,    38,    38,    38,
    38,    38,   nil,    38,    38,    38,    38,    38,   108,   107,
   107,   nil,   108,   108,   108,   108,   108,   108,   nil,   108,
   108,   108,   108,   108,   nil,   106,   106,   nil,   nil,   nil,
   107,   nil,   nil,   nil,   107,   107,   107,   107,   107,   107,
   nil,   107,   107,   107,   107,   107,   106,   148,   148,   nil,
   106,   106,   106,   106,   106,   106,   nil,   106,   106,   106,
   106,   106,   116,   116,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   148,   148,   148,   148,   148,   148,   148,   nil,   148,
   148,   148,   148,   148,    86,    86,   nil,   116,   116,   116,
   116,   nil,   116,   nil,   116,   116,   116,   116,   116,   122,
   nil,   nil,   nil,   nil,   nil,    86,   nil,   nil,   nil,    86,
    86,    86,    86,    86,    86,   120,    86,    86,    86,    86,
    86,   nil,   nil,   nil,   122,   122,   122,   122,   121,   nil,
   nil,   122,   122,   122,   122,   nil,   nil,   nil,   nil,   119,
   120,   120,   120,   120,   nil,   nil,   nil,   120,   120,   120,
   120,   nil,   nil,   121,   121,   121,   121,   nil,   nil,   nil,
   121,   121,   121,   121,   119,   119,   119,   119,   nil,   nil,
   nil,   119,   119,   119,   119,    24,   nil,   nil,    24,    24,
   nil,   nil,    24,   nil,    24,    24,    24,    85,   nil,   nil,
    85,    85,    24,   nil,    85,   nil,    85,    85,    85,    24,
   nil,   nil,    90,   nil,    85,    90,    90,   nil,   nil,    90,
   nil,    90,    90,    90,   152,   nil,   nil,   152,   152,    90,
   nil,   152,   nil,   152,   152,   152,   nil,   nil,   nil,   nil,
   nil,   152 ]

racc_action_pointer = [
    -7,   134,     8,   129,    43,   nil,    59,    34,    24,   nil,
   nil,   nil,   nil,   nil,   112,   nil,   137,    20,    44,    34,
    72,   126,   nil,   nil,  1131,   nil,   nil,   nil,     8,   689,
   319,   nil,    14,   nil,   -12,   -17,   -20,   -23,   926,   455,
   459,   490,   nil,   nil,   nil,   nil,   nil,    84,   888,    48,
    33,   nil,   828,     5,   nil,   nil,   -44,    41,    44,    85,
   131,   108,   nil,   nil,   851,   nil,   665,   634,   630,   599,
   595,   564,   560,   529,   525,   494,   424,   420,   389,   385,
   354,   280,   350,   315,   284,  1143,  1039,   nil,   nil,   nil,
  1158,   nil,   nil,    65,   249,   nil,   -18,    86,   nil,   nil,
   nil,   nil,    67,   171,   723,   686,   980,   964,   942,   904,
    46,    55,   nil,   nil,   nil,   865,  1017,   814,   799,  1094,
  1070,  1083,  1054,    -8,   nil,    -3,   777,   nil,   206,    87,
    82,    55,   nil,   nil,   245,   nil,   nil,   nil,   nil,   nil,
   103,   nil,   151,    42,   nil,    48,   762,   740,  1002,    28,
    93,    18,  1170,    96,   nil,    84,   nil,   185,   -10,    -4,
   nil,   701,   nil,   114,   nil,   126,   nil ]

racc_action_default = [
   -77,   -77,   -77,   -77,   -77,    -2,   -77,    -4,   -77,   -19,
   -54,   -55,   -56,   -57,   -77,   -59,   -77,   -77,   -77,   -77,
   -77,   -77,   167,    -1,   -77,    -5,    -7,    -8,   -77,   -77,
   -77,   -20,   -21,   -22,   -77,   -77,   -77,   -77,   -77,   -77,
   -77,   -77,   -44,   -45,   -50,   -51,   -52,   -77,   -77,   -77,
   -77,   -62,   -65,   -63,   -66,   -69,   -64,   -77,    -3,   -77,
   -77,   -77,   -53,   -16,   -18,   -23,   -77,   -77,   -77,   -77,
   -77,   -77,   -77,   -77,   -77,   -77,   -77,   -77,   -77,   -77,
   -77,   -77,   -77,   -77,   -77,   -77,   -77,   -34,   -39,   -58,
   -77,   -60,   -61,   -77,   -77,    -6,   -77,   -77,   -12,   -11,
   -13,   -14,   -77,   -77,   -77,   -77,   -77,   -77,   -77,   -77,
   -28,   -29,   -30,   -31,   -32,   -35,   -36,   -37,   -38,   -40,
   -41,   -42,   -43,   -71,   -33,   -75,   -67,   -68,   -77,   -77,
   -77,   -77,   -17,   -46,   -77,   -24,   -25,   -26,   -27,   -70,
   -77,   -76,   -77,   -11,    -9,   -77,   -77,   -77,   -77,   -77,
   -77,   -48,   -77,   -77,   -10,   -77,   -47,   -77,   -73,   -77,
   -15,   -77,   -72,   -77,   -49,   -77,   -74 ]

racc_goto_table = [
     4,     8,    65,    25,   139,    28,   141,   145,    53,    56,
    63,    38,    24,    48,    62,    50,     8,    51,    47,    49,
    57,    58,    97,     8,    99,    98,   155,    64,     8,   127,
     1,   nil,   nil,   nil,   nil,   nil,    86,    87,    88,   162,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    95,   nil,    28,    96,
   nil,   nil,   nil,   104,   105,   106,   107,   108,   109,   110,
   111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
   121,   122,   123,   132,     8,   nil,   nil,   125,   nil,     8,
   126,   128,   143,   144,   nil,   nil,   nil,   nil,   nil,   nil,
    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   154,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   156,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   146,   nil,   nil,   nil,   nil,   nil,   147,   nil,   148,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   158,
   nil,     8,   nil,   nil,   161,   nil,   nil,   163,     8 ]

racc_goto_check = [
     2,     8,    16,     5,    26,     8,    26,    10,    24,    24,
    12,    13,     3,    13,    18,     2,     8,     8,    21,    23,
     8,     4,     6,     8,     9,     7,    10,    13,     8,    25,
     1,   nil,   nil,   nil,   nil,   nil,    13,    13,    13,    26,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,     8,     8,
   nil,   nil,   nil,    13,    13,    13,    13,    13,    13,    13,
    13,    13,    13,    13,    13,    13,    13,    13,    13,    13,
    13,    13,     4,    12,     8,   nil,   nil,     4,   nil,     8,
    13,    13,     9,     9,   nil,   nil,   nil,   nil,   nil,   nil,
    13,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    16,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    13,   nil,   nil,   nil,   nil,   nil,    13,   nil,    13,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,
   nil,     8,   nil,   nil,    13,   nil,   nil,     2,     8 ]

racc_goto_pointer = [
   nil,    30,    -2,     6,    -3,    -3,   -38,   -35,    -1,   -37,
  -124,   nil,   -20,    -3,   nil,   nil,   -30,   nil,   -15,   nil,
   nil,     4,   nil,     3,   -11,   -64,  -119 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     7,   nil,    26,    27,    32,   nil,
    42,    11,   nil,    52,    31,    33,   nil,    43,    10,    12,
    13,   nil,    15,   nil,   nil,    54,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 57, :_reduce_1,
  2, 57, :_reduce_2,
  3, 58, :_reduce_3,
  1, 58, :_reduce_4,
  1, 59, :_reduce_5,
  3, 59, :_reduce_6,
  1, 61, :_reduce_7,
  1, 61, :_reduce_8,
  5, 62, :_reduce_9,
  7, 62, :_reduce_10,
  3, 63, :_reduce_11,
  3, 63, :_reduce_12,
  1, 65, :_reduce_13,
  1, 65, :_reduce_14,
  6, 65, :_reduce_15,
  3, 67, :_reduce_16,
  3, 68, :_reduce_17,
  1, 68, :_reduce_18,
  1, 64, :_reduce_19,
  1, 69, :_reduce_20,
  1, 69, :_reduce_21,
  1, 69, :_reduce_22,
  2, 69, :_reduce_23,
  4, 69, :_reduce_24,
  4, 69, :_reduce_25,
  4, 69, :_reduce_26,
  4, 69, :_reduce_27,
  3, 69, :_reduce_28,
  3, 69, :_reduce_29,
  3, 69, :_reduce_30,
  3, 69, :_reduce_31,
  3, 69, :_reduce_32,
  3, 69, :_reduce_33,
  2, 69, :_reduce_34,
  3, 69, :_reduce_35,
  3, 69, :_reduce_36,
  3, 69, :_reduce_37,
  3, 69, :_reduce_38,
  2, 69, :_reduce_39,
  3, 69, :_reduce_40,
  3, 69, :_reduce_41,
  3, 69, :_reduce_42,
  3, 69, :_reduce_43,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  4, 71, :_reduce_46,
  6, 72, :_reduce_47,
  5, 72, :_reduce_48,
  8, 72, :_reduce_49,
  1, 66, :_reduce_50,
  1, 73, :_reduce_51,
  1, 73, :_reduce_52,
  3, 60, :_reduce_53,
  1, 60, :_reduce_54,
  1, 74, :_reduce_55,
  1, 74, :_reduce_56,
  1, 74, :_reduce_57,
  3, 74, :_reduce_58,
  1, 74, :_reduce_59,
  3, 74, :_reduce_60,
  3, 74, :_reduce_61,
  2, 75, :_reduce_62,
  2, 76, :_reduce_63,
  2, 76, :_reduce_64,
  1, 80, :_reduce_65,
  1, 80, :_reduce_66,
  3, 80, :_reduce_67,
  3, 80, :_reduce_68,
  1, 81, :_reduce_69,
  4, 77, :_reduce_70,
  3, 77, :_reduce_71,
  5, 82, :_reduce_72,
  4, 82, :_reduce_73,
  11, 78, :_reduce_74,
  3, 79, :_reduce_75,
  4, 79, :_reduce_76 ]

racc_reduce_n = 77

racc_shift_n = 167

racc_token_table = {
  false => 0,
  :error => 1,
  "TkString" => 2,
  "TkNum" => 3,
  "TkId" => 4,
  "TkPlus" => 5,
  "TkEqual" => 6,
  "TkIf" => 7,
  "TkDo" => 8,
  "TkOd" => 9,
  "TkFi" => 10,
  "TkFor" => 11,
  "TkRof" => 12,
  "TkPrint" => 13,
  "TkPrintln" => 14,
  "TkRead" => 15,
  "Tkint" => 16,
  "Tkbool" => 17,
  "Tkarray" => 18,
  "TkTrue" => 19,
  "TkFalse" => 20,
  "Tk0Block" => 21,
  "TkCBlock" => 22,
  "TkSoForth" => 23,
  "TkComma" => 24,
  "TkOpenPar" => 25,
  "TkClosePar" => 26,
  "TkAsig" => 27,
  "TkSemicolon" => 28,
  "TkArrow" => 29,
  "TkMinus" => 30,
  "TkDiv" => 31,
  "TkMult" => 32,
  "TkMod" => 33,
  "TkOr" => 34,
  "TkAnd" => 35,
  "TkNot" => 36,
  "TkLess" => 37,
  "TkLeq" => 38,
  "TkGeq" => 39,
  "TkGreater" => 40,
  "TkNEqual" => 41,
  "Tk0Bracket" => 42,
  "TkCBracket" => 43,
  "TkTwoPoints" => 44,
  "TkConcat" => 45,
  "TkAtoi" => 46,
  "TkSize" => 47,
  "TkMax" => 48,
  "TkMin" => 49,
  "TkGuard" => 50,
  "Tkto" => 51,
  "Tkin" => 52,
  "TkDeclare" => 53,
  :right => 54,
  :UMINUS => 55 }

racc_nt_base = 56

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"TkString\"",
  "\"TkNum\"",
  "\"TkId\"",
  "\"TkPlus\"",
  "\"TkEqual\"",
  "\"TkIf\"",
  "\"TkDo\"",
  "\"TkOd\"",
  "\"TkFi\"",
  "\"TkFor\"",
  "\"TkRof\"",
  "\"TkPrint\"",
  "\"TkPrintln\"",
  "\"TkRead\"",
  "\"Tkint\"",
  "\"Tkbool\"",
  "\"Tkarray\"",
  "\"TkTrue\"",
  "\"TkFalse\"",
  "\"Tk0Block\"",
  "\"TkCBlock\"",
  "\"TkSoForth\"",
  "\"TkComma\"",
  "\"TkOpenPar\"",
  "\"TkClosePar\"",
  "\"TkAsig\"",
  "\"TkSemicolon\"",
  "\"TkArrow\"",
  "\"TkMinus\"",
  "\"TkDiv\"",
  "\"TkMult\"",
  "\"TkMod\"",
  "\"TkOr\"",
  "\"TkAnd\"",
  "\"TkNot\"",
  "\"TkLess\"",
  "\"TkLeq\"",
  "\"TkGeq\"",
  "\"TkGreater\"",
  "\"TkNEqual\"",
  "\"Tk0Bracket\"",
  "\"TkCBracket\"",
  "\"TkTwoPoints\"",
  "\"TkConcat\"",
  "\"TkAtoi\"",
  "\"TkSize\"",
  "\"TkMax\"",
  "\"TkMin\"",
  "\"TkGuard\"",
  "\"Tkto\"",
  "\"Tkin\"",
  "\"TkDeclare\"",
  "right",
  "UMINUS",
  "$start",
  "PROGRAMA",
  "CUERPO",
  "LISTA_DECLARACION",
  "INSTRUCCIONES",
  "DECLARACION",
  "DECLA_CARD",
  "DECLA_TIPO",
  "IDENTIFICADOR",
  "TIPO",
  "LITERAL_NUMERO",
  "ASIGNACION",
  "ARRAY_INI",
  "EXPRESION",
  "LITERAL",
  "EXP_ARRAY",
  "EXP_ARRAY_REC",
  "LITERAL_BOOLEANO",
  "INSTRUCCION",
  "ENTRADA",
  "SALIDA",
  "CONDICIONAL",
  "ITERACION_FOR",
  "ITERACION_DO",
  "IMPRIMIR",
  "STRING",
  "GUARDIA" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parserGusb2.y', 44)
  def _reduce_1(val, _values, result)
     result = Programa.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 45)
  def _reduce_2(val, _values, result)
     result = Programa.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 50)
  def _reduce_3(val, _values, result)
     result = Cuerpo.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 51)
  def _reduce_4(val, _values, result)
     result = Cuerpo.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 56)
  def _reduce_5(val, _values, result)
     result = ListaDeclaracion.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 57)
  def _reduce_6(val, _values, result)
     result = ListaDeclaracion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 62)
  def _reduce_7(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 63)
  def _reduce_8(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 66)
  def _reduce_9(val, _values, result)
    result = Decla_Card.new(val[0],nil,val[4],nil,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 67)
  def _reduce_10(val, _values, result)
    result = Decla_Card.new(val[0],val[2],val[4],val[6],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 70)
  def _reduce_11(val, _values, result)
    result = Decla_Tipo.new(val[0],nil,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 71)
  def _reduce_12(val, _values, result)
    result = Decla_Tipo.new(val[0],val[2],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 77)
  def _reduce_13(val, _values, result)
     result = TipoNum.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 78)
  def _reduce_14(val, _values, result)
     result = TipoBool.new(val[0])  
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 79)
  def _reduce_15(val, _values, result)
     result = TipoArray.new(val[0],val[2],val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 84)
  def _reduce_16(val, _values, result)
     result = Asignacion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 87)
  def _reduce_17(val, _values, result)
    result = ArrayIni.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 88)
  def _reduce_18(val, _values, result)
    result = ArrayIni.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 99)
  def _reduce_19(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 104)
  def _reduce_20(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 105)
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 106)
  def _reduce_22(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 107)
  def _reduce_23(val, _values, result)
     result = ArrayAsig.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 108)
  def _reduce_24(val, _values, result)
     result = Atoi.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 109)
  def _reduce_25(val, _values, result)
     result = Size.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 110)
  def _reduce_26(val, _values, result)
     result = Min.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 111)
  def _reduce_27(val, _values, result)
     result = Max.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 112)
  def _reduce_28(val, _values, result)
    result = OpSuma.new(val[0],val[1],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 113)
  def _reduce_29(val, _values, result)
     result = OpResta.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 114)
  def _reduce_30(val, _values, result)
     result = OpMultiplicacion.new(val[0],val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 115)
  def _reduce_31(val, _values, result)
     result = OpDivisionE.new(val[0],val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 116)
  def _reduce_32(val, _values, result)
     result = OpModE.new(val[0],val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 117)
  def _reduce_33(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 118)
  def _reduce_34(val, _values, result)
     result = OpUMINUS.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 119)
  def _reduce_35(val, _values, result)
     result = OpAnd.new(val[0],val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 120)
  def _reduce_36(val, _values, result)
     result = OpOr.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 121)
  def _reduce_37(val, _values, result)
     result = OpEquivalente.new(val[0],val[1],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 122)
  def _reduce_38(val, _values, result)
     result = OpDesigual.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 123)
  def _reduce_39(val, _values, result)
     result = OpExclamacion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 124)
  def _reduce_40(val, _values, result)
     result = OpMenor.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 125)
  def _reduce_41(val, _values, result)
     result = OpMenorIgual.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 126)
  def _reduce_42(val, _values, result)
     result = OpMayorIgual.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 127)
  def _reduce_43(val, _values, result)
     result = OpMayor.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 44 omitted

# reduce 45 omitted

module_eval(<<'.,.,', 'parserGusb2.y', 138)
  def _reduce_46(val, _values, result)
    result = ArrayConsult.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 142)
  def _reduce_47(val, _values, result)
    result = ListArrayAsig.new(nil,val[1],val[3],val[5],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 143)
  def _reduce_48(val, _values, result)
    result = ListArrayAsig.new(nil,val[1],val[3],nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 144)
  def _reduce_49(val, _values, result)
    result = ListArrayAsig.new(nil,val[1],val[3],nil,val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 148)
  def _reduce_50(val, _values, result)
     result = LiteralNumerico.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 153)
  def _reduce_51(val, _values, result)
     result = LiteralBooleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 154)
  def _reduce_52(val, _values, result)
     result = LiteralBooleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 159)
  def _reduce_53(val, _values, result)
     result = Instrucciones.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 160)
  def _reduce_54(val, _values, result)
     result = Instrucciones.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 166)
  def _reduce_55(val, _values, result)
     result = Instruccion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 167)
  def _reduce_56(val, _values, result)
     result = Instruccion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 168)
  def _reduce_57(val, _values, result)
     result = Instruccion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 169)
  def _reduce_58(val, _values, result)
     result = Instruccion.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 170)
  def _reduce_59(val, _values, result)
     result = Instruccion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 171)
  def _reduce_60(val, _values, result)
     result = Instruccion.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 172)
  def _reduce_61(val, _values, result)
     result = Instruccion.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 177)
  def _reduce_62(val, _values, result)
     result = Entrada.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 182)
  def _reduce_63(val, _values, result)
     result = Salida.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 183)
  def _reduce_64(val, _values, result)
     result = Salida.new(val[1], "SALTO") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 188)
  def _reduce_65(val, _values, result)
     result = Imprimir.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 189)
  def _reduce_66(val, _values, result)
     result = Imprimir.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 190)
  def _reduce_67(val, _values, result)
     result = Imprimir.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 191)
  def _reduce_68(val, _values, result)
     result = Imprimir.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 196)
  def _reduce_69(val, _values, result)
     result = Str.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 201)
  def _reduce_70(val, _values, result)
     result = Condicional.new(val[0],val[2],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 202)
  def _reduce_71(val, _values, result)
     result = Condicional.new(val[0],val[2],nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 207)
  def _reduce_72(val, _values, result)
    result = Guardia.new(val[1],val[3],val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 208)
  def _reduce_73(val, _values, result)
    result = Guardia.new(val[1],val[3],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 211)
  def _reduce_74(val, _values, result)
     result = IteradorFor.new(val[1], val[3], val[5], val[8]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 216)
  def _reduce_75(val, _values, result)
     result = IteratorDo.new(val[0],val[2],nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 217)
  def _reduce_76(val, _values, result)
     result = IteratorDo.new(val[0],val[2],val[3]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ParserGusb
