#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.15
# from Racc grammer file "".
#

require 'racc/parser.rb'


# Clases requeridas
require_relative 'lexer'
require_relative 'clasesGusb'
require_relative 'clasesContexto'

# Errores sintacticos
class ErrorSintactico < RuntimeError

	def initialize(token)
		@token = token
	end

	def to_s
		"ERROR: fila: " + @token.fila.to_s() + ", columna: " + @token.columna.to_s() + ", token inesperado: #{@token.token} \n"  
	end
end

# Main del Parser
class ParserGusb < Racc::Parser

module_eval(<<'...end parserGusb2.y/module_eval...', 'parserGusb2.y', 246)
	
	def initialize(tokens)
		@tokens = tokens
		@yydebug = true
		super()
	end 

	def parse
		do_parse
	end

	def next_token
		@tokens.shift
	end

	def on_error(id, token, pila)
		raise ErrorSintactico.new(token)
	end
...end parserGusb2.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
     9,   130,   131,    14,    16,    44,    94,    21,    93,    19,
    20,    18,     9,    44,    29,    14,    16,    17,    44,    21,
    29,    19,    20,    18,     9,    29,    29,    14,    16,    17,
     5,    21,   145,    19,    20,    18,    55,    44,     9,    67,
   158,    17,   140,    60,    30,   165,    60,   140,   140,     6,
   100,   101,   102,    45,    46,    67,   161,    93,    92,    39,
    69,     6,    29,    61,    40,     9,   129,    55,    44,     9,
    41,    23,    66,     6,    55,    44,     9,    75,    74,    76,
    34,    35,    37,    36,    45,    46,   100,   101,   102,   150,
    39,    45,    46,    44,   152,    40,     9,    39,   100,   101,
   102,    41,    40,    75,    74,    76,    44,     9,    41,     9,
    91,    34,    35,    37,    36,    44,     9,    89,    34,    35,
    37,    36,    45,    46,   100,   101,   102,   157,    39,     2,
    71,    45,    46,    40,    70,   163,     9,    39,    44,    41,
    44,     9,    40,   167,    22,     9,     3,   171,    41,    34,
    35,    37,    36,    44,    44,     9,    45,    46,    34,    35,
    37,    36,    39,   173,    68,   175,   176,    40,   177,   nil,
    45,    46,   nil,    41,    44,     9,    39,   nil,   nil,   nil,
   nil,    40,   nil,    34,    35,    37,    36,    41,    44,     9,
    45,    46,   nil,   nil,   nil,   nil,    39,    34,    35,    37,
    36,    40,   nil,   nil,    45,    46,   nil,    41,   nil,   nil,
    39,    72,    79,   nil,   nil,    40,   nil,    34,    35,    37,
    36,    41,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    34,    35,    37,    36,   nil,    73,    75,    74,    76,
    78,    77,   nil,    81,    82,    83,    84,    80,    44,     9,
   nil,   nil,    44,     9,   nil,   nil,   nil,   142,   nil,   nil,
   nil,   nil,   nil,   nil,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,    44,     9,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,    44,     9,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,    44,     9,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,    44,     9,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,    44,     9,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,    45,    46,
    39,   nil,   nil,   nil,    39,    40,   nil,   nil,   nil,    40,
   nil,    41,   nil,    44,     9,    41,   nil,    44,     9,   nil,
   nil,    34,    35,    37,    36,    34,    35,    37,    36,    45,
    46,   nil,   nil,    45,    46,    39,   nil,   nil,   nil,    39,
    40,   nil,   nil,   nil,    40,   nil,    41,   nil,    44,     9,
    41,   nil,   nil,   nil,   nil,   nil,    34,    35,    37,    36,
    34,    35,    37,    36,    45,    46,   nil,   nil,   nil,   nil,
    39,    72,    79,     9,   nil,    40,    14,    16,   nil,   nil,
    21,    41,    19,    20,    18,   nil,    72,    79,   nil,   nil,
    17,    34,    35,    37,    36,   nil,    73,    75,    74,    76,
    78,    77,   nil,    81,    82,    83,    84,    80,    72,    79,
   134,    73,    75,    74,    76,    78,    77,   nil,    81,    82,
    83,    84,    80,   nil,   174,   nil,    72,    79,   nil,   nil,
   nil,   nil,   nil,    73,    75,    74,    76,    78,    77,   nil,
    81,    82,    83,    84,    80,   103,   133,    72,    79,   nil,
   nil,    73,    75,    74,    76,    78,    77,   nil,    81,    82,
    83,    84,    80,    72,    79,   nil,   nil,   nil,   nil,   nil,
   nil,   155,    73,    75,    74,    76,    78,    77,   nil,    81,
    82,    83,    84,    80,    72,    79,   nil,   154,    73,    75,
    74,    76,    78,    77,   nil,    81,    82,    83,    84,    80,
    72,    79,   nil,   nil,   nil,   153,   nil,   nil,   nil,    73,
    75,    74,    76,    78,    77,   nil,    81,    82,    83,    84,
    80,    72,   -80,   nil,   nil,    73,    75,    74,    76,    78,
    77,   nil,    81,    82,    83,    84,    80,    72,   -80,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    73,    75,    74,    76,
    72,    79,   nil,    81,    82,    83,    84,   -80,   nil,   nil,
   nil,   nil,    73,    75,    74,    76,    72,    79,   nil,    81,
    82,    83,    84,   -80,   nil,    73,    75,    74,    76,   nil,
    77,   nil,    81,    82,    83,    84,    80,    72,    79,   nil,
   nil,    73,    75,    74,    76,    78,    77,   nil,    81,    82,
    83,    84,    80,    72,    79,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    73,    75,    74,    76,    72,    79,   nil,    81,
    82,    83,    84,    80,   138,   nil,   nil,   nil,    73,    75,
    74,    76,    78,    77,   nil,    81,    82,    83,    84,    80,
    90,    73,    75,    74,    76,    78,    77,   nil,    81,    82,
    83,    84,    80,    72,    79,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    72,    79,   nil,   nil,
   nil,   nil,   nil,   nil,   137,   nil,   nil,   nil,    73,    75,
    74,    76,    78,    77,   nil,    81,    82,    83,    84,    80,
    85,    73,    75,    74,    76,    78,    77,   nil,    81,    82,
    83,    84,    80,    72,    79,     9,   nil,   nil,    14,    16,
   nil,   nil,    21,   nil,    19,    20,    18,   nil,   nil,    72,
    79,   nil,    17,   nil,   136,   nil,   nil,   nil,    73,    75,
    74,    76,    78,    77,   nil,    81,    82,    83,    84,    80,
   135,    72,    79,   nil,    73,    75,    74,    76,    78,    77,
   nil,    81,    82,    83,    84,    80,    72,   nil,   nil,   nil,
   nil,   nil,   124,   nil,   nil,   nil,    73,    75,    74,    76,
    78,    77,    72,    81,    82,    83,    84,    80,   nil,   nil,
   nil,    73,    75,    74,    76,    72,   nil,   nil,   -80,   -80,
   -80,   -80,   nil,   nil,   nil,   nil,    72,    73,    75,    74,
    76,   nil,   nil,   nil,   -80,   -80,   -80,   -80,   nil,   nil,
    73,    75,    74,    76,   nil,   nil,   nil,   -80,   -80,   -80,
   -80,    73,    75,    74,    76,   nil,   nil,   nil,   -80,   -80,
   -80,   -80,     9,   nil,   nil,    14,    16,   nil,   nil,    21,
   nil,    19,    20,    18,     9,   nil,   nil,    14,    16,    17,
   nil,    21,   nil,    19,    20,    18,    59,   nil,   nil,     9,
   nil,    17,    14,    16,   nil,   nil,    21,   nil,    19,    20,
    18,   nil,   nil,   nil,   nil,   nil,    17 ]

racc_action_check = [
   163,    97,   102,   163,   163,   131,    57,   163,    56,   163,
   163,   163,     2,   152,    58,     2,     2,   163,   157,     2,
   162,     2,     2,     2,    17,   125,   123,    17,    17,     2,
     2,    17,   131,    17,    17,    17,    19,    19,    19,   153,
   152,    17,   162,    28,     8,   157,    96,   125,   123,   163,
   129,   129,   129,    19,    19,    32,   153,    53,    50,    19,
    35,     2,     7,    28,    19,     6,    96,    93,    93,    93,
    19,     4,    32,    17,    20,    20,    20,   110,   110,   110,
    19,    19,    19,    19,    93,    93,    61,    61,    61,   143,
    93,    20,    20,   145,   146,    93,    59,    20,   150,   150,
   150,    93,    20,   111,   111,   111,   140,   140,    20,    60,
    49,    93,    93,    93,    93,    14,    14,    47,    20,    20,
    20,    20,   140,   140,   130,   130,   130,   151,   140,     0,
    37,    14,    14,   140,    36,   155,    18,    14,   158,   140,
    16,    16,    14,   159,     3,    21,     1,   164,    14,   140,
   140,   140,   140,   165,   142,   142,    16,    16,    14,    14,
    14,    14,    16,   166,    34,   170,   172,    16,   175,   nil,
   142,   142,   nil,    16,    67,    67,   142,   nil,   nil,   nil,
   nil,   142,   nil,    16,    16,    16,    16,   142,   161,   161,
    67,    67,   nil,   nil,   nil,   nil,    67,   142,   142,   142,
   142,    67,   nil,   nil,   161,   161,   nil,    67,   nil,   nil,
   161,   128,   128,   nil,   nil,   161,   nil,    67,    67,    67,
    67,   161,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   161,   161,   161,   161,   nil,   128,   128,   128,   128,
   128,   128,   nil,   128,   128,   128,   128,   128,   134,   134,
   nil,   nil,    68,    68,   nil,   nil,   nil,   128,   nil,   nil,
   nil,   nil,   nil,   nil,   134,   134,   nil,   nil,    68,    68,
   134,   nil,   nil,   nil,    68,   134,   nil,   nil,   nil,    68,
   nil,   134,   nil,   103,   103,    68,   nil,    94,    94,   nil,
   nil,   134,   134,   134,   134,    68,    68,    68,    68,   103,
   103,   nil,   nil,    94,    94,   103,   nil,   nil,   nil,    94,
   103,   nil,   nil,   nil,    94,   nil,   103,   nil,    83,    83,
    94,   nil,    30,    30,   nil,   nil,   103,   103,   103,   103,
    94,    94,    94,    94,    83,    83,   nil,   nil,    30,    30,
    83,   nil,   nil,   nil,    30,    83,   nil,   nil,   nil,    30,
   nil,    83,   nil,    84,    84,    30,   nil,    66,    66,   nil,
   nil,    83,    83,    83,    83,    30,    30,    30,    30,    84,
    84,   nil,   nil,    66,    66,    84,   nil,   nil,   nil,    66,
    84,   nil,   nil,   nil,    66,   nil,    84,   nil,    82,    82,
    66,   nil,    81,    81,   nil,   nil,    84,    84,    84,    84,
    66,    66,    66,    66,    82,    82,   nil,   nil,    81,    81,
    82,   nil,   nil,   nil,    81,    82,   nil,   nil,   nil,    81,
   nil,    82,   nil,    80,    80,    81,   nil,    79,    79,   nil,
   nil,    82,    82,    82,    82,    81,    81,    81,    81,    80,
    80,   nil,   nil,    79,    79,    80,   nil,   nil,   nil,    79,
    80,   nil,   nil,   nil,    79,   nil,    80,   nil,    39,    39,
    79,   nil,    40,    40,   nil,   nil,    80,    80,    80,    80,
    79,    79,    79,    79,    39,    39,   nil,   nil,    40,    40,
    39,   nil,   nil,   nil,    40,    39,   nil,   nil,   nil,    40,
   nil,    39,   nil,    41,    41,    40,   nil,    78,    78,   nil,
   nil,    39,    39,    39,    39,    40,    40,    40,    40,    41,
    41,   nil,   nil,    78,    78,    41,   nil,   nil,   nil,    78,
    41,   nil,   nil,   nil,    78,   nil,    41,   nil,    77,    77,
    78,   nil,    76,    76,   nil,   nil,    41,    41,    41,    41,
    78,    78,    78,    78,    77,    77,   nil,   nil,    76,    76,
    77,   nil,   nil,   nil,    76,    77,   nil,   nil,   nil,    76,
   nil,    77,   nil,    75,    75,    76,   nil,    74,    74,   nil,
   nil,    77,    77,    77,    77,    76,    76,    76,    76,    75,
    75,   nil,   nil,    74,    74,    75,   nil,   nil,   nil,    74,
    75,   nil,   nil,   nil,    74,   nil,    75,   nil,    73,    73,
    74,   nil,    72,    72,   nil,   nil,    75,    75,    75,    75,
    74,    74,    74,    74,    73,    73,   nil,   nil,    72,    72,
    73,   nil,   nil,   nil,    72,    73,   nil,   nil,   nil,    72,
   nil,    73,   nil,    71,    71,    72,   nil,    70,    70,   nil,
   nil,    73,    73,    73,    73,    72,    72,    72,    72,    71,
    71,   nil,   nil,    70,    70,    71,   nil,   nil,   nil,    70,
    71,   nil,   nil,   nil,    70,   nil,    71,   nil,    69,    69,
    70,   nil,   nil,   nil,   nil,   nil,    71,    71,    71,    71,
    70,    70,    70,    70,    69,    69,   nil,   nil,   nil,   nil,
    69,   105,   105,   154,   nil,    69,   154,   154,   nil,   nil,
   154,    69,   154,   154,   154,   nil,   168,   168,   nil,   nil,
   154,    69,    69,    69,    69,   nil,   105,   105,   105,   105,
   105,   105,   nil,   105,   105,   105,   105,   105,   104,   104,
   105,   168,   168,   168,   168,   168,   168,   nil,   168,   168,
   168,   168,   168,   nil,   168,   nil,    64,    64,   nil,   nil,
   nil,   nil,   nil,   104,   104,   104,   104,   104,   104,   nil,
   104,   104,   104,   104,   104,    64,   104,   149,   149,   nil,
   nil,    64,    64,    64,    64,    64,    64,   nil,    64,    64,
    64,    64,    64,   148,   148,   nil,   nil,   nil,   nil,   nil,
   nil,   149,   149,   149,   149,   149,   149,   149,   nil,   149,
   149,   149,   149,   149,   147,   147,   nil,   148,   148,   148,
   148,   148,   148,   148,   nil,   148,   148,   148,   148,   148,
   126,   126,   nil,   nil,   nil,   147,   nil,   nil,   nil,   147,
   147,   147,   147,   147,   147,   nil,   147,   147,   147,   147,
   147,   118,   118,   nil,   nil,   126,   126,   126,   126,   126,
   126,   nil,   126,   126,   126,   126,   126,   117,   117,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   118,   118,   118,   118,
   116,   116,   nil,   118,   118,   118,   118,   118,   nil,   nil,
   nil,   nil,   117,   117,   117,   117,    52,    52,   nil,   117,
   117,   117,   117,   117,   nil,   116,   116,   116,   116,   nil,
   116,   nil,   116,   116,   116,   116,   116,   115,   115,   nil,
   nil,    52,    52,    52,    52,    52,    52,   nil,    52,    52,
    52,    52,    52,   109,   109,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   115,   115,   115,   115,    48,    48,   nil,   115,
   115,   115,   115,   115,   109,   nil,   nil,   nil,   109,   109,
   109,   109,   109,   109,   nil,   109,   109,   109,   109,   109,
    48,    48,    48,    48,    48,    48,    48,   nil,    48,    48,
    48,    48,    48,   108,   108,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    38,    38,   nil,   nil,
   nil,   nil,   nil,   nil,   108,   nil,   nil,   nil,   108,   108,
   108,   108,   108,   108,   nil,   108,   108,   108,   108,   108,
    38,    38,    38,    38,    38,    38,    38,   nil,    38,    38,
    38,    38,    38,   107,   107,    29,   nil,   nil,    29,    29,
   nil,   nil,    29,   nil,    29,    29,    29,   nil,   nil,   106,
   106,   nil,    29,   nil,   107,   nil,   nil,   nil,   107,   107,
   107,   107,   107,   107,   nil,   107,   107,   107,   107,   107,
   106,    86,    86,   nil,   106,   106,   106,   106,   106,   106,
   nil,   106,   106,   106,   106,   106,   122,   nil,   nil,   nil,
   nil,   nil,    86,   nil,   nil,   nil,    86,    86,    86,    86,
    86,    86,   121,    86,    86,    86,    86,    86,   nil,   nil,
   nil,   122,   122,   122,   122,   120,   nil,   nil,   122,   122,
   122,   122,   nil,   nil,   nil,   nil,   119,   121,   121,   121,
   121,   nil,   nil,   nil,   121,   121,   121,   121,   nil,   nil,
   120,   120,   120,   120,   nil,   nil,   nil,   120,   120,   120,
   120,   119,   119,   119,   119,   nil,   nil,   nil,   119,   119,
   119,   119,    24,   nil,   nil,    24,    24,   nil,   nil,    24,
   nil,    24,    24,    24,    90,   nil,   nil,    90,    90,    24,
   nil,    90,   nil,    90,    90,    90,    24,   nil,   nil,    85,
   nil,    90,    85,    85,   nil,   nil,    85,   nil,    85,    85,
    85,   nil,   nil,   nil,   nil,   nil,    85 ]

racc_action_pointer = [
   108,   146,     8,   144,    49,   nil,    61,    34,    17,   nil,
   nil,   nil,   nil,   nil,   112,   nil,   137,    20,   132,    34,
    72,   141,   nil,   nil,  1148,   nil,   nil,   nil,    19,  1021,
   319,   nil,    30,   nil,   139,    35,   109,   105,   981,   455,
   459,   490,   nil,   nil,   nil,   nil,   nil,   107,   931,   101,
    36,   nil,   881,    12,   nil,   nil,   -37,   -46,   -14,    92,
   105,    70,   nil,   nil,   741,   nil,   354,   171,   249,   665,
   634,   630,   599,   595,   564,   560,   529,   525,   494,   424,
   420,   389,   385,   315,   350,  1175,  1056,   nil,   nil,   nil,
  1160,   nil,   nil,    65,   284,   nil,    22,   -23,   nil,   nil,
   nil,   nil,   -40,   280,   723,   686,  1034,  1018,   968,   918,
    46,    72,   nil,   nil,   nil,   902,   865,   852,   836,  1111,
  1100,  1087,  1071,    -2,   nil,    -3,   815,   nil,   206,    34,
   108,     2,   nil,   nil,   245,   nil,   nil,   nil,   nil,   nil,
   103,   nil,   151,    65,   nil,    90,    71,   799,   778,   762,
    82,   104,    10,    14,   689,   114,   nil,    15,   135,   100,
   nil,   185,    -8,    -4,   104,   150,   120,   nil,   701,   nil,
   143,   nil,   123,   nil,   nil,   156,   nil,   nil ]

racc_action_default = [
   -80,   -80,   -80,   -80,   -80,    -2,   -80,    -4,   -80,   -22,
   -57,   -58,   -59,   -60,   -80,   -62,   -80,   -80,   -80,   -80,
   -80,   -80,   178,    -1,   -80,    -5,    -7,    -8,   -80,   -80,
   -80,   -23,   -24,   -25,   -80,   -80,   -80,   -80,   -80,   -80,
   -80,   -80,   -47,   -48,   -53,   -54,   -55,   -80,   -80,   -80,
   -80,   -65,   -68,   -66,   -69,   -72,   -67,   -80,    -3,   -80,
   -80,   -80,   -56,   -19,   -21,   -26,   -80,   -80,   -80,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,
   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -37,   -42,   -61,
   -80,   -63,   -64,   -80,   -80,    -6,   -80,   -80,   -12,   -11,
   -13,   -14,   -80,   -80,   -80,   -80,   -80,   -80,   -80,   -80,
   -31,   -32,   -33,   -34,   -35,   -38,   -39,   -40,   -41,   -43,
   -44,   -45,   -46,   -74,   -36,   -78,   -70,   -71,   -80,   -80,
   -80,   -80,   -20,   -49,   -80,   -27,   -28,   -29,   -30,   -73,
   -80,   -79,   -80,   -11,    -9,   -80,   -80,   -80,   -80,   -80,
   -80,   -80,   -80,   -51,   -80,   -80,   -10,   -80,   -80,   -80,
   -50,   -80,   -76,   -80,   -80,   -80,   -80,   -18,   -80,   -75,
   -80,   -15,   -80,   -17,   -52,   -80,   -16,   -77 ]

racc_goto_table = [
     4,     8,    65,    25,   146,    28,    63,   139,    38,   141,
    48,    53,    56,    99,    24,    50,     8,    51,   151,    58,
    57,    62,    47,     8,    64,   159,    49,    97,     8,    98,
   164,   166,   127,    86,    87,    88,     1,   nil,   172,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   169,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    95,   nil,    28,    96,
   104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
   114,   115,   116,   117,   118,   119,   120,   121,   122,   132,
   123,   143,   144,   nil,     8,   125,   nil,   126,   128,     8,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    64,   nil,   nil,
   nil,   nil,   156,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   160,   nil,   nil,   nil,   nil,   147,   nil,
   nil,   nil,   nil,   nil,   148,   nil,   149,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   162,
   nil,   nil,   nil,     8,   nil,   168,   nil,   nil,   nil,   nil,
   nil,   170,     8 ]

racc_goto_check = [
     2,     8,    16,     5,    10,     8,    12,    26,    13,    26,
    13,    24,    24,     9,     3,     2,     8,     8,    10,     4,
     8,    18,    21,     8,    13,    10,    23,     6,     8,     7,
    10,    10,    25,    13,    13,    13,     1,   nil,    10,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,    26,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     5,   nil,     8,     8,
    13,    13,    13,    13,    13,    13,    13,    13,    13,    13,
    13,    13,    13,    13,    13,    13,    13,    13,    13,    12,
     4,     9,     9,   nil,     8,     4,   nil,    13,    13,     8,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    13,   nil,   nil,
   nil,   nil,     9,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    16,   nil,   nil,   nil,   nil,    13,   nil,
   nil,   nil,   nil,   nil,    13,   nil,    13,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     4,
   nil,   nil,   nil,     8,   nil,    13,   nil,   nil,   nil,   nil,
   nil,     2,     8 ]

racc_goto_pointer = [
   nil,    36,    -2,     8,    -5,    -3,   -33,   -31,    -1,   -48,
  -127,   nil,   -24,    -6,   nil,   nil,   -30,   nil,    -8,   nil,
   nil,     8,   nil,    10,    -8,   -61,  -116 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,     7,   nil,    26,    27,    32,   nil,
    42,    11,   nil,    52,    31,    33,   nil,    43,    10,    12,
    13,   nil,    15,   nil,   nil,    54,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 57, :_reduce_1,
  2, 57, :_reduce_2,
  3, 58, :_reduce_3,
  1, 58, :_reduce_4,
  1, 59, :_reduce_5,
  3, 59, :_reduce_6,
  1, 61, :_reduce_7,
  1, 61, :_reduce_8,
  5, 62, :_reduce_9,
  7, 62, :_reduce_10,
  3, 63, :_reduce_11,
  3, 63, :_reduce_12,
  1, 65, :_reduce_13,
  1, 65, :_reduce_14,
  7, 65, :_reduce_15,
  8, 65, :_reduce_16,
  7, 65, :_reduce_17,
  6, 65, :_reduce_18,
  3, 67, :_reduce_19,
  3, 68, :_reduce_20,
  1, 68, :_reduce_21,
  1, 64, :_reduce_22,
  1, 69, :_reduce_23,
  1, 69, :_reduce_24,
  1, 69, :_reduce_25,
  2, 69, :_reduce_26,
  4, 69, :_reduce_27,
  4, 69, :_reduce_28,
  4, 69, :_reduce_29,
  4, 69, :_reduce_30,
  3, 69, :_reduce_31,
  3, 69, :_reduce_32,
  3, 69, :_reduce_33,
  3, 69, :_reduce_34,
  3, 69, :_reduce_35,
  3, 69, :_reduce_36,
  2, 69, :_reduce_37,
  3, 69, :_reduce_38,
  3, 69, :_reduce_39,
  3, 69, :_reduce_40,
  3, 69, :_reduce_41,
  2, 69, :_reduce_42,
  3, 69, :_reduce_43,
  3, 69, :_reduce_44,
  3, 69, :_reduce_45,
  3, 69, :_reduce_46,
  1, 70, :_reduce_none,
  1, 70, :_reduce_none,
  4, 71, :_reduce_49,
  6, 72, :_reduce_50,
  5, 72, :_reduce_51,
  8, 72, :_reduce_52,
  1, 66, :_reduce_53,
  1, 73, :_reduce_54,
  1, 73, :_reduce_55,
  3, 60, :_reduce_56,
  1, 60, :_reduce_57,
  1, 74, :_reduce_58,
  1, 74, :_reduce_59,
  1, 74, :_reduce_60,
  3, 74, :_reduce_61,
  1, 74, :_reduce_62,
  3, 74, :_reduce_63,
  3, 74, :_reduce_64,
  2, 75, :_reduce_65,
  2, 76, :_reduce_66,
  2, 76, :_reduce_67,
  1, 80, :_reduce_68,
  1, 80, :_reduce_69,
  3, 80, :_reduce_70,
  3, 80, :_reduce_71,
  1, 81, :_reduce_72,
  4, 77, :_reduce_73,
  3, 77, :_reduce_74,
  5, 82, :_reduce_75,
  4, 82, :_reduce_76,
  11, 78, :_reduce_77,
  3, 79, :_reduce_78,
  4, 79, :_reduce_79 ]

racc_reduce_n = 80

racc_shift_n = 178

racc_token_table = {
  false => 0,
  :error => 1,
  "TkString" => 2,
  "TkNum" => 3,
  "TkId" => 4,
  "TkPlus" => 5,
  "TkEqual" => 6,
  "TkIf" => 7,
  "TkDo" => 8,
  "TkOd" => 9,
  "TkFi" => 10,
  "TkFor" => 11,
  "TkRof" => 12,
  "TkPrint" => 13,
  "TkPrintln" => 14,
  "TkRead" => 15,
  "Tkint" => 16,
  "Tkbool" => 17,
  "Tkarray" => 18,
  "TkTrue" => 19,
  "TkFalse" => 20,
  "Tk0Block" => 21,
  "TkCBlock" => 22,
  "TkSoForth" => 23,
  "TkComma" => 24,
  "TkOpenPar" => 25,
  "TkClosePar" => 26,
  "TkAsig" => 27,
  "TkSemicolon" => 28,
  "TkArrow" => 29,
  "TkMinus" => 30,
  "TkDiv" => 31,
  "TkMult" => 32,
  "TkMod" => 33,
  "TkOr" => 34,
  "TkAnd" => 35,
  "TkNot" => 36,
  "TkLess" => 37,
  "TkLeq" => 38,
  "TkGeq" => 39,
  "TkGreater" => 40,
  "TkNEqual" => 41,
  "Tk0Bracket" => 42,
  "TkCBracket" => 43,
  "TkTwoPoints" => 44,
  "TkConcat" => 45,
  "TkAtoi" => 46,
  "TkSize" => 47,
  "TkMax" => 48,
  "TkMin" => 49,
  "TkGuard" => 50,
  "Tkto" => 51,
  "Tkin" => 52,
  "TkDeclare" => 53,
  :right => 54,
  :UMINUS => 55 }

racc_nt_base = 56

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"TkString\"",
  "\"TkNum\"",
  "\"TkId\"",
  "\"TkPlus\"",
  "\"TkEqual\"",
  "\"TkIf\"",
  "\"TkDo\"",
  "\"TkOd\"",
  "\"TkFi\"",
  "\"TkFor\"",
  "\"TkRof\"",
  "\"TkPrint\"",
  "\"TkPrintln\"",
  "\"TkRead\"",
  "\"Tkint\"",
  "\"Tkbool\"",
  "\"Tkarray\"",
  "\"TkTrue\"",
  "\"TkFalse\"",
  "\"Tk0Block\"",
  "\"TkCBlock\"",
  "\"TkSoForth\"",
  "\"TkComma\"",
  "\"TkOpenPar\"",
  "\"TkClosePar\"",
  "\"TkAsig\"",
  "\"TkSemicolon\"",
  "\"TkArrow\"",
  "\"TkMinus\"",
  "\"TkDiv\"",
  "\"TkMult\"",
  "\"TkMod\"",
  "\"TkOr\"",
  "\"TkAnd\"",
  "\"TkNot\"",
  "\"TkLess\"",
  "\"TkLeq\"",
  "\"TkGeq\"",
  "\"TkGreater\"",
  "\"TkNEqual\"",
  "\"Tk0Bracket\"",
  "\"TkCBracket\"",
  "\"TkTwoPoints\"",
  "\"TkConcat\"",
  "\"TkAtoi\"",
  "\"TkSize\"",
  "\"TkMax\"",
  "\"TkMin\"",
  "\"TkGuard\"",
  "\"Tkto\"",
  "\"Tkin\"",
  "\"TkDeclare\"",
  "right",
  "UMINUS",
  "$start",
  "PROGRAMA",
  "CUERPO",
  "LISTA_DECLARACION",
  "INSTRUCCIONES",
  "DECLARACION",
  "DECLA_CARD",
  "DECLA_TIPO",
  "IDENTIFICADOR",
  "TIPO",
  "LITERAL_NUMERO",
  "ASIGNACION",
  "ARRAY_INI",
  "EXPRESION",
  "LITERAL",
  "EXP_ARRAY",
  "EXP_ARRAY_REC",
  "LITERAL_BOOLEANO",
  "INSTRUCCION",
  "ENTRADA",
  "SALIDA",
  "CONDICIONAL",
  "ITERACION_FOR",
  "ITERACION_DO",
  "IMPRIMIR",
  "STRING",
  "GUARDIA" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'parserGusb2.y', 44)
  def _reduce_1(val, _values, result)
     result = Programa.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 45)
  def _reduce_2(val, _values, result)
     result = Programa.new(nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 50)
  def _reduce_3(val, _values, result)
     result = Cuerpo.new(val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 51)
  def _reduce_4(val, _values, result)
     result = Cuerpo.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 56)
  def _reduce_5(val, _values, result)
     result = ListaDeclaracion.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 57)
  def _reduce_6(val, _values, result)
     result = ListaDeclaracion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 62)
  def _reduce_7(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 63)
  def _reduce_8(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 66)
  def _reduce_9(val, _values, result)
    result = Decla_Card.new(val[0],nil,val[4],nil,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 67)
  def _reduce_10(val, _values, result)
    result = Decla_Card.new(val[0],val[2],val[4],val[6],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 70)
  def _reduce_11(val, _values, result)
    result = Decla_Tipo.new(val[0],nil,val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 71)
  def _reduce_12(val, _values, result)
    result = Decla_Tipo.new(val[0],val[2],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 77)
  def _reduce_13(val, _values, result)
     result = TipoNum.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 78)
  def _reduce_14(val, _values, result)
     result = TipoBool.new(val[0])  
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 79)
  def _reduce_15(val, _values, result)
     result = TipoArray.new(val[0],val[2],val[3],nil,val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 80)
  def _reduce_16(val, _values, result)
     result = TipoArray.new(val[0],val[2],val[3],val[5],val[6]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 81)
  def _reduce_17(val, _values, result)
     result = TipoArray.new(val[0],nil,val[2],val[4],val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 82)
  def _reduce_18(val, _values, result)
     result = TipoArray.new(val[0],nil,val[2],nil,val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 87)
  def _reduce_19(val, _values, result)
     result = Asignacion.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 90)
  def _reduce_20(val, _values, result)
    result = ArrayIni.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 91)
  def _reduce_21(val, _values, result)
    result = ArrayIni.new(val[0],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 102)
  def _reduce_22(val, _values, result)
     result = Identificador.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 107)
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 108)
  def _reduce_24(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 109)
  def _reduce_25(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 110)
  def _reduce_26(val, _values, result)
     result = ArrayAsig.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 111)
  def _reduce_27(val, _values, result)
     result = Atoi.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 112)
  def _reduce_28(val, _values, result)
     result = Size.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 113)
  def _reduce_29(val, _values, result)
     result = Min.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 114)
  def _reduce_30(val, _values, result)
     result = Max.new(val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 115)
  def _reduce_31(val, _values, result)
    result = OpSuma.new(val[0],val[1],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 116)
  def _reduce_32(val, _values, result)
     result = OpResta.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 117)
  def _reduce_33(val, _values, result)
     result = OpMultiplicacion.new(val[0],val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 118)
  def _reduce_34(val, _values, result)
     result = OpDivisionE.new(val[0],val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 119)
  def _reduce_35(val, _values, result)
     result = OpModE.new(val[0],val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 120)
  def _reduce_36(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 121)
  def _reduce_37(val, _values, result)
     result = OpUMINUS.new(val[0], val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 122)
  def _reduce_38(val, _values, result)
     result = OpAnd.new(val[0],val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 123)
  def _reduce_39(val, _values, result)
     result = OpOr.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 124)
  def _reduce_40(val, _values, result)
     result = OpEquivalente.new(val[0],val[1],val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 125)
  def _reduce_41(val, _values, result)
     result = OpDesigual.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 126)
  def _reduce_42(val, _values, result)
     result = OpExclamacion.new(val[0],val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 127)
  def _reduce_43(val, _values, result)
     result = OpMenor.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 128)
  def _reduce_44(val, _values, result)
     result = OpMenorIgual.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 129)
  def _reduce_45(val, _values, result)
     result = OpMayorIgual.new(val[0], val[1], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 130)
  def _reduce_46(val, _values, result)
     result = OpMayor.new(val[0], val[1], val[2]) 
    result
  end
.,.,

# reduce 47 omitted

# reduce 48 omitted

module_eval(<<'.,.,', 'parserGusb2.y', 141)
  def _reduce_49(val, _values, result)
    result = ArrayConsult.new(val[0],val[2])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 145)
  def _reduce_50(val, _values, result)
    result = ListArrayAsig.new(nil,val[1],val[3],val[5],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 146)
  def _reduce_51(val, _values, result)
    result = ListArrayAsig.new(nil,val[1],val[3],nil,nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 147)
  def _reduce_52(val, _values, result)
    result = ListArrayAsig.new(nil,val[1],val[3],nil,val[6])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 151)
  def _reduce_53(val, _values, result)
     result = LiteralNumerico.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 156)
  def _reduce_54(val, _values, result)
     result = LiteralBooleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 157)
  def _reduce_55(val, _values, result)
     result = LiteralBooleano.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 162)
  def _reduce_56(val, _values, result)
     result = Instrucciones.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 163)
  def _reduce_57(val, _values, result)
     result = Instrucciones.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 169)
  def _reduce_58(val, _values, result)
     result = Instruccion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 170)
  def _reduce_59(val, _values, result)
     result = Instruccion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 171)
  def _reduce_60(val, _values, result)
     result = Instruccion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 172)
  def _reduce_61(val, _values, result)
     result = Instruccion.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 173)
  def _reduce_62(val, _values, result)
     result = Instruccion.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 174)
  def _reduce_63(val, _values, result)
     result = Instruccion.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 175)
  def _reduce_64(val, _values, result)
     result = Instruccion.new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 180)
  def _reduce_65(val, _values, result)
     result = Entrada.new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 185)
  def _reduce_66(val, _values, result)
     result = Salida.new(val[1], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 186)
  def _reduce_67(val, _values, result)
     result = Salida.new(val[1], "SALTO") 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 191)
  def _reduce_68(val, _values, result)
     result = Imprimir.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 192)
  def _reduce_69(val, _values, result)
     result = Imprimir.new(nil, val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 193)
  def _reduce_70(val, _values, result)
     result = Imprimir.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 194)
  def _reduce_71(val, _values, result)
     result = Imprimir.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 199)
  def _reduce_72(val, _values, result)
     result = Str.new(val[0]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 204)
  def _reduce_73(val, _values, result)
     result = Condicional.new(val[0],val[2],val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 205)
  def _reduce_74(val, _values, result)
     result = Condicional.new(val[0],val[2],nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 210)
  def _reduce_75(val, _values, result)
    result = Guardia.new(val[1],val[3],val[4])
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 211)
  def _reduce_76(val, _values, result)
    result = Guardia.new(val[1],val[3],nil)
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 214)
  def _reduce_77(val, _values, result)
     result = IteradorFor.new(val[1], val[3], val[5], val[8]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 219)
  def _reduce_78(val, _values, result)
     result = IteratorDo.new(val[0],val[2],nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'parserGusb2.y', 220)
  def _reduce_79(val, _values, result)
     result = IteratorDo.new(val[0],val[2],val[3]) 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class ParserGusb
